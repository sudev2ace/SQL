Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000 
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 8090 (business_id), 9581(user_id)
vi. Checkin = 493
vii. Photo = 10000 (primary key - id)
viii. Tip = 3979 (business_id), 537 (user_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



	3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no.
	
	
	SQL code used to arrive at answer:
	
	SELECT COUNT(id) +  count(name) +  count(review_count) +  COUNT(yelping_since) +  COUNT(useful) +  COUNT(funny) +  COUNT(cool) + COUNT(fans) + count(average_stars) + count(compliment_hot) + count(compliment_more) + count(compliment_profile) + count(compliment_cute) + count(compliment_list) + count(compliment_note) + count(compliment_plain) + count(compliment_cool) + count(compliment_funny) + count(compliment_writer) + count(compliment_photos) AS NullCount
	FROM user
	WHERE id IS NULL OR name IS NULL OR review_count IS NULL OR yelping_since IS NULL OR useful IS NULL OR funny IS NULL OR cool IS NULL OR fans IS NULL OR average_stars IS NULL OR compliment_hot IS NULL OR compliment_more IS NULL OR compliment_profile IS NULL OR compliment_cute IS NULL OR compliment_list IS NULL OR compliment_note IS NULL OR compliment_plain IS NULL OR compliment_cool IS NULL OR compliment_funny IS NULL OR compliment_writer IS NULL OR compliment_photos IS NULL;

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082 
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549 
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144 
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414 
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995 
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	SELECT City, count(review_count) as Reviews
	FROM business
	GROUP BY city
	ORDER BY 2 DESC;
	
	Copy and Paste the Result Below:

	+-----------------+---------+
	| city            | Reviews |
	+-----------------+---------+
	| Las Vegas       |    1561 |
	| Phoenix         |    1001 |
	| Toronto         |     985 |
	| Scottsdale      |     497 |
	| Charlotte       |     468 |
	| Pittsburgh      |     353 |
	| Montréal        |     337 |
	| Mesa            |     304 |
	| Henderson       |     274 |
	| Tempe           |     261 |
	| Edinburgh       |     239 |
	| Chandler        |     232 |
	| Cleveland       |     189 |
	| Gilbert         |     188 |
	| Glendale        |     188 |
	| Madison         |     176 |
	| Mississauga     |     150 |
	| Stuttgart       |     141 |
	| Peoria          |     105 |
	| Markham         |      80 |
	| Champaign       |      71 |
	| North Las Vegas |      70 |
	| North York      |      64 |
	| Surprise        |      60 |
	| Richmond Hill   |      54 |
	+-----------------+---------+
	(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon	

SQL code used to arrive at answer:

	SELECT stars, review_count
	FROM business
	WHERE city = 'Avon'
	ORDER BY stars;

Copy and Paste the Resulting Table Below (2 columns – star rating and count):

	+-------+--------------+
	| stars | review_count |
	+-------+--------------+
	|   1.5 |           10 |
	|   2.5 |            3 |
	|   2.5 |            3 |
	|   3.5 |            7 |
	|   3.5 |           31 |
	|   3.5 |           50 |
	|   4.0 |            4 |
	|   4.0 |           17 |
	|   4.5 |           31 |
	|   5.0 |            3 |
	+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:

	SELECT stars, review_count
	FROM business
	WHERE city = 'Beachwood'
	ORDER BY stars;


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
	+-------+--------------+
	| stars | review_count |
	+-------+--------------+
	|   2.0 |            8 |
	|   2.5 |            3 |
	|   3.0 |            8 |
	|   3.0 |            3 |
	|   3.5 |            3 |
	|   3.5 |            3 |
	|   4.0 |           69 |
	|   4.5 |           14 |
	|   4.5 |            3 |
	|   5.0 |            6 |
	|   5.0 |            4 |
	|   5.0 |            6 |
	|   5.0 |            3 |
	|   5.0 |            4 |
	+-------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	SELECT name, review_count
	FROM user
	ORDER BY review_count DESC
	LIMIT 3;
		
	Copy and Paste the Result Below:
		
	+--------+--------------+
	| name   | review_count |
	+--------+--------------+
	| Gerald |         2000 |
	| Sara   |         1629 |
	| Yuri   |         1339 |
	+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	
	No it doesn't correlate. Lets take an example for this. Consider three users: Harald - who has 311 fans, Gerald - who has posted lot of reviews and finally, Sara - who has posted 2nd most number of reviews lately.
	
		SELECT name, review_count, fans, useful, funny, cool
		FROM user
		WHERE name IN ('Gerald','Harald','Sara')
		ORDER BY review_count DESC;
	
	+-----------+--------------+------+--------+--------+--------+
	| name      | review_count | fans | useful |  funny |   cool |
	+-----------+--------------+------+--------+--------+--------+
	| Gerald    |         2000 |  253 |  17524 |   2324 |  15008 |
	| Sara      |         1629 |   50 |     25 |     10 |      2 |	
	| Harald    |         1153 |  311 | 122921 | 122419 | 122890 |

	With inspection, we can say that the review_count does not mean more fans. If the value of useful, funny or cool is more, then we can see that the person has more number of fans (Harald- in our case)
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

	+-----------------+-----------------+--------------+
	| ReviewsWtihLove | ReviewsWtihHate | TotalReviews |
	+-----------------+-----------------+--------------+
	|            1780 |             232 |        10000 |
	+-----------------+-----------------+--------------+
	
	Reviews with love or hate is much less than the total number of reviews.
	
	SQL code used to arrive at answer:

	SELECT (SELECT COUNT(*) FROM review WHERE text LIKE '%love%') AS ReviewsWtihLove, 
		   (SELECT COUNT(*) FROM review WHERE text LIKE '%hate%') AS ReviewsWtihHate, 
		    COUNT(*) AS TotalReviews
	FROM review;
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
			
	SELECT name, fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10;
	
	Copy and Paste the Result Below:

	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?	

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
	
SELECT name, fans, review_count, useful, funny, cool, yelping_since
FROM user
ORDER BY fans DESC
LIMIT 10;	
	
	Copy and Paste the Result Below:
	
+-----------+------+--------------+--------+--------+--------+---------------------+
| name      | fans | review_count | useful |  funny |   cool | yelping_since       |
+-----------+------+--------------+--------+--------+--------+---------------------+
| Amy       |  503 |          609 |   3226 |   2554 |   2751 | 2007-07-19 00:00:00 |
| Mimi      |  497 |          968 |    257 |    138 |    159 | 2011-03-30 00:00:00 |
| Harald    |  311 |         1153 | 122921 | 122419 | 122890 | 2012-11-27 00:00:00 |
| Gerald    |  253 |         2000 |  17524 |   2324 |  15008 | 2012-12-16 00:00:00 |
| Christine |  173 |          930 |   4834 |   6646 |   4321 | 2009-07-08 00:00:00 |
| Lisa      |  159 |          813 |     48 |     13 |      6 | 2009-10-05 00:00:00 |
| Cat       |  133 |          377 |   1062 |    672 |   1076 | 2009-02-05 00:00:00 |
| William   |  126 |         1215 |   9363 |   9361 |   9370 | 2015-02-19 00:00:00 |
| Fran      |  124 |          862 |   9851 |   7606 |   9344 | 2012-04-05 00:00:00 |
| Lissa     |  120 |          834 |    455 |    150 |    342 | 2007-08-14 00:00:00 |
+-----------+------+--------------+--------+--------+--------+---------------------+
	
	Please explain your findings and interpretation of the results:
	
We can see that the count of useful, funny or cool does not directly relate to the total number of fans gained. It involves other parameters like the yelping_since and more importantly the text they have written.
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
		Yes. Few 4-5 star restaurants have shorter work hours than the 2-3 star restaurants. Also these shorter work hours are mostly on the weekdays for 4-5 star restaurants, while the 2-3 star restaurants have more or less the same work hours for the whole week.
		
ii. Do the two groups you chose to analyze have a different number of reviews?
        Yes. We can see that the 4-5 star restaurants have a decent number of reviews, while reviews for 2-3 star restaurants are either more or very less.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

	Ofcourse. We can hypothesize the type of location based on the number of business present there. Suppose if we check in Toronto, we can see that we have around 10 restaurants at present, which can means many people may enjoy going to restaurants there; Compared to Glendale, where we have just one restaurant.
	But we have to keep in mind that every restaurant have different postal codes, hence they are not confined to one location and are spread out.

SQL code used for analysis:

LOCATION- Toronto
Category- Restaurants

	SELECT b.city, c.category, b.name, b.stars, b.review_count, b.postal_code,
	  CASE 
		WHEN b.stars>=2 AND b.stars < 4 THEN '2-3 rating'
		WHEN b.stars>=4 THEN '4-5 rating'
		ELSE 'Others'
	  END AS Rating
	FROM business b
	INNER JOIN category c ON b.id = c.business_id
	WHERE b.city = 'Toronto' AND c.category = 'Restaurants'
	GROUP BY b.stars;


2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Average stars is more for the restaurants which are open, than the ones which are closed.

         Average stars:
		 
		 open : 3.67900943396   
		 closed: 3.52039473684 
         
ii. Difference 2: Average reviews is more for the restaurants which are open then the ones which are closed.
         
         Average review count:
		 
		 open: 31.7570754717 
		 closed: 23.1980263158 
         
SQL code used for analysis:

	SELECT COUNT(*), is_open, avg(stars), avg(review_count)
	FROM business
	GROUP BY is_open;
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         To analyze and determine the reason for bad reviews for businesses
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
         To improve our business, one must analyze the reviews, especially the bad ones. So reflecting on our positive and negative experiences can reveal a lot about why this is the case. These reviews can be due to a reaction which they were not expecting or they may actually want us to improve our business.
		 So to help business acknowledge these type of reviews, i have made a consolidated list of what may be the reason for them. The idea for this is to match the text of the reviews for certain keywords. By Identifying proper keywords we can improve the accuracy of this database. The output for these keywords is either an yes/no.
                  
iii. Output of your finished dataset:
    
	+-----------------------------------+-------+------------------------+----------------------+-----------+-----------------+
	| name                              | stars | EmployeeBehaviourIssue | BadFoodForRestaurant | HighFares | LocationProblem |
	+-----------------------------------+-------+------------------------+----------------------+-----------+-----------------+
	| Aki Da Japanese Seafood House     |   2.0 | no                     | no                   | no        | no              |
	| B&B Theatres Mesa Gateway 12 IMAX |   2.0 | no                     | no                   | no        | no              |
	| Best Buy                          |   2.0 | yes                    | no                   | no        | yes             |
	| Budget Rent A Car                 |   2.0 | yes                    | no                   | no        | no              |
	| CIK Telecom                       |   2.0 | no                     | no                   | no        | no              |
	| Jose Cuervo Tequileria            |   2.0 | yes                    | no                   | no        | yes             |
	| KFC                               |   2.0 | yes                    | yes                  | no        | no              |
	| Keffer Chrysler Jeep Dodge Ram    |   2.0 | yes                    | no                   | no        | yes             |
	| Macy's                            |   2.0 | no                     | no                   | no        | no              |
	| Markham Honda                     |   2.0 | yes                    | no                   | no        | no              |
	| US Post Office                    |   2.0 | no                     | no                   | no        | no              |
	| Wok Cafe                          |   2.0 | no                     | no                   | no        | yes             |
	| Young Ford                        |   2.0 | yes                    | no                   | no        | no              |
	| Elegant Car Rental                |   1.5 | no                     | no                   | no        | no              |	
	| Harris Teeter                     |   1.5 | yes                    | no                   | no        | no              |
	| Mayflower Cab Company             |   1.5 | no                     | no                   | no        | no              |
	| BTR Construction & Roofing        |   1.0 | no                     | no                   | no        | no              |
	+-----------------------------------+-------+------------------------+----------------------+-----------+-----------------+
         
iv. Provide the SQL code you used to create your final dataset:

SELECT b.name, b.stars, 
  CASE
    WHEN r.text LIKE '%service%' THEN 'yes'
    WHEN r.text LIKE '%rude%' THEN 'yes'
    WHEN r.text LIKE '%behaviour%' THEN 'yes'
    ELSE 'no'
  END AS EmployeeBehaviourIssue,
  CASE
    WHEN r.text LIKE '%taste%' THEN 'yes'
    WHEN r.text LIKE '%cold%' THEN 'yes'
    WHEN r.text LIKE '%food%' THEN 'yes'
    ELSE 'no'
  END AS BadFoodForRestaurant,
  CASE
    WHEN r.text LIKE '%costly%' THEN 'yes'
    WHEN r.text LIKE '%expensive%'THEN 'yes'
    WHEN r.text LIKE '%overpriced%' THEN 'yes'
    ELSE 'no'
  END AS HighFares,
  CASE
    WHEN r.text LIKE '%clean%' THEN 'yes'
    WHEN r.text LIKE '%floor%'THEN 'yes'
    WHEN r.text LIKE '%air conditioning%' THEN 'yes'
    WHEN r.text LIKE '%environment%' THEN 'yes'
    WHEN r.text LIKE '%light%' THEN 'yes'
    ELSE 'no'
  END AS LocationProblem
FROM business b
INNER JOIN review r ON b.id = r.business_id
WHERE b.stars <= 2
GROUP BY b.name
ORDER BY 2 DESC;
